{"version":3,"sources":["logo.svg","components/header/Header.jsx","components/todos/context/TodosReducer.js","components/todos/context/TodosActionTypes.js","components/todos/context/TodosContext.js","components/todos/components/todo-summary/TodoSummary.jsx","components/todos/components/todo-add/TodoAdd.jsx","components/todos/components/todo-item/TodoItem.jsx","components/todos/components/todo-list/TodoList.jsx","components/todos/Todos.jsx","components/footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","logoImage","isLoading","loading","className","src","alt","todosReducer","state","action","type","console","log","todos","todoText","text","done","filter","todo","map","TodosContext","createContext","TodosContextProvider","children","useState","loadedItems","setLoadedItems","useReducer","todoItems","todosDispatch","useEffect","setTimeout","dataUrl","process","fetch","then","r","json","catch","e","alert","finally","Provider","value","TodoSummary","useContext","pendigTodos","length","doneTodos","TodoAdd","setTodoText","onSubmit","preventDefault","placeholder","onChange","event","target","disabled","TodoItem","item","index","onMouseUp","onClick","TodoList","todoItemList","key","Todos","Footer","sourceCodeUrl","href","App","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,iSCG5B,SAASC,EAAT,GAAqD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,UAA4B,IAAjBC,iBAAiB,SACzDC,EAAUD,EACZ,0BAAME,UAAU,WAAhB,gBACG,GAEP,OACI,gCACI,yBAAKC,IAAKJ,EAAWG,UAAW,UAAWF,EAAY,UAAU,IAAKI,IAAI,SAC1E,yBAAKF,UAAU,SACVJ,EADL,IACaG,I,wBCVZI,EAAe,SAACC,EAAOC,GAChC,OAAOA,EAAOC,MACV,ICJyB,oBDMrB,OADAC,QAAQC,IAAR,kCACM,GAAN,mBAAWJ,GAAX,YAAoBC,EAAOI,QAE/B,ICPgB,WDSZ,OADAF,QAAQC,IAAR,6BAAkCH,EAAOK,SAAzC,MACM,GAAN,mBAAWN,GAAX,CAAiB,CAAEO,KAAMN,EAAOK,SAAUE,MAAM,KAEpD,ICVmB,cDYf,OADAL,QAAQC,IAAR,gCAAqCH,EAAOK,SAA5C,MACON,EAAMS,QAAO,SAACC,GAAD,OAAUA,EAAKH,OAAON,EAAOK,YAErD,ICb0B,qBDetB,OADAH,QAAQC,IAAR,gCAAqCH,EAAOK,SAA5C,MACON,EAAMW,KAAI,SAACD,GACd,OAAIA,EAAKH,OAASN,EAAOK,SACd,CAACC,KAAMG,EAAKH,KAAMC,MAAOE,EAAKF,MAElCE,KAGf,QACI,OAAOV,IEpBNY,EAAeC,0BA4CbC,MA1Cf,YAA2C,IAAZC,EAAW,EAAXA,SAAW,EAEAC,oBAAS,GAFT,mBAE/BC,EAF+B,KAElBC,EAFkB,OAGHC,qBAAWpB,EAAc,IAHtB,mBAG/BqB,EAH+B,KAGpBC,EAHoB,KAgCtC,OALAC,qBAAU,WAENC,YAAY,kBAtBOC,EAXPC,wCAYPR,GACDS,MAAMF,GACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACtB,GACHF,QAAQC,IAAI,kBAERC,GACAgB,EAAc,CAACnB,KDvBN,oBCuB+BG,aAG/CyB,OAAM,SAACC,GACJ5B,QAAQC,IAAI2B,GACZC,MAAM,mDAETC,SAAQ,kBAAMf,GAAe,OAfpB,IAACM,IAsB2B,QAC/C,CAACP,IAGA,kBAACL,EAAasB,SAAd,CAAuBC,MAAO,CAC1Bf,YACAH,cACAI,kBACCN,ICzCE,SAASqB,IAAe,IAC5BhB,EAAaiB,qBAAWzB,GAAxBQ,UAEDkB,EAAW,OAAGlB,QAAH,IAAGA,OAAH,EAAGA,EAAWX,QAAO,SAACC,GAAD,OAAwB,IAAdA,EAAKF,QAAgB+B,OAC/DC,EAAS,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAWX,QAAO,SAACC,GAAD,OAAwB,IAAdA,EAAKF,QAAe+B,OAElE,OACI,yBAAK3C,UAAU,gBACX,yBAAKA,UAAU,WAAf,oBACqB,8BAAO0C,IAE5B,yBAAK1C,UAAU,aAAf,iBACkB,8BAAO4C,K,MCXtB,SAASC,IAAW,IAAD,EACEzB,mBAAS,IADX,mBACvBV,EADuB,KACboC,EADa,KAEvBrB,EAAiBgB,qBAAWzB,GAA5BS,cAYP,OACI,0BAAMzB,UAAU,WAAW+C,SAPZ,SAACZ,GAChBA,EAAEa,iBACFvB,EAAc,CAACnB,KHdC,WGceI,aAC/BoC,EAAY,MAKR,2BACIxC,KAAK,OACL2C,YAAY,sBACZV,MAAO7B,EACPwC,SAhBiB,SAACC,GAC1BL,EAAYK,EAAMC,OAAOb,UAgBrB,2BAAOjC,KAAK,SAAS+C,SAA4B,IAAlB3C,EAASiC,OAAYJ,MAAM,c,MCrBvD,SAASe,EAAT,GAAkC,IAAfC,EAAc,EAAdA,KAEvB9B,GAFqC,EAAR+B,MAEZf,qBAAWzB,GAA5BS,eAEP,OACI,wBAAIzB,UAAW,cAAgBuD,EAAK3C,KAAO,YAAY,KACnD,4BAAQZ,UAAU,WAAWE,IAAI,eAAeN,MAAM,eAAe6D,UAAW,kBAAMhC,EAAc,CAACnB,KJR/E,qBIQwGI,SAAU6C,EAAK5C,SAA7I,UAGA,0BAAMX,UAAU,QACXuD,EAAK5C,MAEV,4BAAQX,UAAU,SAASE,IAAI,SAASN,MAAM,SAAS8D,QAAS,kBAAMjC,EAAc,CAACnB,KJftE,cIewFI,SAAU6C,EAAK5C,SAAtH,W,MCXG,SAASgD,IAAY,IAAD,EAEElB,qBAAWzB,GAArCQ,EAFwB,EAExBA,UAAWH,EAFa,EAEbA,YAEZuC,EAAY,OAAGpC,QAAH,IAAGA,OAAH,EAAGA,EAAWT,KAAI,SAACD,EAAM0C,GAAP,OAChC,kBAAC,EAAD,CACID,KAAMzC,EACN+C,IAAKL,EACLA,MAAOA,OAGf,OAAKnC,GAEI,OAACG,QAAD,IAACA,OAAD,EAACA,EAAWmB,QAIb,wBAAI3C,UAAU,aACT4D,GAJD,0DAFA,mDCVD,SAASE,EAAT,GAA6B,IAAbjE,EAAY,EAAZA,UAEpBwB,EAAeoB,qBAAWzB,GAA1BK,YAGP,OACI,yBAAKrB,UAAU,SACX,kBAAC,EAAD,CAAQJ,MAAM,YAAYC,UAAWA,EAAWC,WAAYuB,IAC5D,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,O,MCNG0C,MATf,YAAkC,IAAjBC,EAAgB,EAAhBA,cAEb,OACI,gCACI,uBAAGhE,UAAU,YAAYiE,KAAMD,GAA/B,oBAA+D,yBAAK/D,IAAK4B,mCAA6C3B,IAAI,mBCcvHgE,MAZf,WACE,OACE,yBAAKlE,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC8D,EAAD,CAAOjE,UAAWsE,OAEpB,kBAAC,EAAD,CAAQH,cAAc,8CCHRI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdhD,OAAM,SAAAiD,GACL5E,QAAQ4E,MAAMA,EAAMC,c","file":"static/js/main.9a65a37a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport './Header.scss'\r\n\r\nexport default function Header({title, logoImage, isLoading=true}) {\r\n    const loading = isLoading ? (\r\n        <span className=\"loading\">(loading...)</span>\r\n        ): '';\r\n\r\n    return (\r\n        <header>\r\n            <img src={logoImage} className={' logo '+ (isLoading ? 'loading':'')} alt=\"logo\" />                     \r\n            <div className=\"title\">\r\n                {title} {loading}\r\n            </div>   \r\n        </header>\r\n    )\r\n}\r\n","import { ADD_FETCHED_TODOS, ADD_TODO, REMOVE_TODO, TOGGLE_TODO_STATUS } from \"./TodosActionTypes\"\r\n\r\nexport const todosReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_FETCHED_TODOS:\r\n            console.log(`reducer: add fetched todo list`)\r\n            return [...state,...action.todos]\r\n\r\n        case ADD_TODO:\r\n            console.log(`reducer: add todo \"${action.todoText}\"`)\r\n            return [...state,{ text: action.todoText, done: false}]\r\n\r\n        case REMOVE_TODO:\r\n            console.log(`reducer: remove todo \"${action.todoText}\"`)\r\n            return state.filter((todo) => todo.text!==action.todoText)\r\n\r\n        case TOGGLE_TODO_STATUS:            \r\n            console.log(`reducer: toggle todo \"${action.todoText}\"`)\r\n            return state.map((todo)=> {\r\n                if (todo.text === action.todoText) {\r\n                    return {text: todo.text, done: !todo.done}\r\n                }\r\n                return todo\r\n            })\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","export const ADD_FETCHED_TODOS = 'ADD_FETCHED_TODOS'\r\nexport const ADD_TODO = 'ADD_TODO'\r\nexport const REMOVE_TODO = 'REMOVE_TODO'\r\nexport const TOGGLE_TODO_STATUS = 'TOGGLE_TODO_STATUS'","import React, { createContext, useState, useEffect, useReducer } from 'react'\r\nimport { todosReducer } from './TodosReducer'\r\nimport { ADD_FETCHED_TODOS } from './TodosActionTypes'\r\n\r\nconst todoDataUrl = process.env.PUBLIC_URL + '/data/todos.json'\r\n\r\nexport const TodosContext = createContext()\r\n\r\nfunction TodosContextProvider({children}) {\r\n    // state\r\n    const [loadedItems, setLoadedItems] = useState(false)\r\n    const [todoItems, todosDispatch] = useReducer(todosReducer, [])\r\n\r\n\r\n    // data load\r\n    const fetchTodoData = (dataUrl) => {        \r\n        if (!loadedItems) {\r\n            fetch(dataUrl)            \r\n                .then((r) => r.json())\r\n                .then((todos) => {\r\n                    console.log('todo(s) loaded') \r\n\r\n                    if (todos) {\r\n                        todosDispatch({type: ADD_FETCHED_TODOS, todos})\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                    alert('ToDo(s) could not be loaded. Create yours...')\r\n                })\r\n                .finally(() => setLoadedItems(true))\r\n        }\r\n    }\r\n\r\n    // fetch todos from file\r\n    useEffect(() => {\r\n        // delay the request so we can see the spinner :D\r\n        setTimeout( () => fetchTodoData(todoDataUrl), 1200)\r\n    }, [loadedItems]) /* eslint-disable-line react-hooks/exhaustive-deps  */ // <---- OK???\r\n    \r\n    return (\r\n        <TodosContext.Provider value={{\r\n            todoItems,\r\n            loadedItems,\r\n            todosDispatch}}>\r\n            {children}\r\n        </TodosContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TodosContextProvider\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport './TodoSummary.scss'\r\nimport { TodosContext } from '../../context/TodosContext';\r\n\r\nexport default function TodoSummary() {\r\n    const {todoItems} = useContext(TodosContext)\r\n\r\n    const pendigTodos = todoItems?.filter((todo) => todo.done === false).length;\r\n    const doneTodos = todoItems?.filter((todo) => todo.done === true).length;\r\n\r\n    return (\r\n        <div className=\"todo-summary\">\r\n            <div className=\"pending\">\r\n                Pending ToDo(s): <span>{pendigTodos}</span>\r\n            </div>\r\n            <div className=\"completed\">\r\n                Done ToDo(s): <span>{doneTodos}</span>\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {TodosContext} from '../../context/TodosContext'\r\nimport './TodoAdd.scss'\r\nimport { ADD_TODO } from '../../context/TodosActionTypes'\r\n\r\nexport default function TodoAdd() {\r\n    const [todoText, setTodoText] = useState('')\r\n    const {todosDispatch} = useContext(TodosContext)\r\n\r\n    const handleTodoTextChange = (event) => {\r\n        setTodoText(event.target.value)\r\n    }    \r\n\r\n    const submitTodo = (e) => {\r\n        e.preventDefault()\r\n        todosDispatch({type: ADD_TODO, todoText})\r\n        setTodoText('')\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-add\" onSubmit={submitTodo}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"type todo text here\" \r\n                value={todoText} \r\n                onChange={handleTodoTextChange} />\r\n            <input type=\"submit\" disabled={todoText.length===0} value=\"Add todo\"/>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport './TodoItem.scss'\r\nimport { TodosContext } from '../../context/TodosContext'\r\nimport { TOGGLE_TODO_STATUS, REMOVE_TODO } from '../../context/TodosActionTypes'\r\n\r\nexport default function TodoItem({item, index}) {\r\n\r\n    const {todosDispatch} = useContext(TodosContext)\r\n\r\n    return (\r\n        <li className={'todo-item ' + (item.done ? 'completed':'')}>\r\n            <button className=\"complete\" alt=\"Mark as done\" title=\"Mark as done\" onMouseUp={() => todosDispatch({type:TOGGLE_TODO_STATUS, todoText: item.text})}>\r\n                &#x2714;\r\n            </button>\r\n            <span className=\"text\">\r\n                {item.text}\r\n            </span>\r\n            <button className=\"remove\" alt=\"Remove\" title=\"Remove\" onClick={() => todosDispatch({type:REMOVE_TODO, todoText: item.text})}>\r\n                &#x2716;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport TodoItem from '../todo-item/TodoItem'\r\n\r\nimport './TodoList.scss'\r\nimport { TodosContext } from '../../context/TodosContext'\r\n\r\nexport default function TodoList() {\r\n\r\n    const {todoItems, loadedItems} = useContext(TodosContext)\r\n\r\n    const todoItemList = todoItems?.map((todo, index) => \r\n        <TodoItem \r\n            item={todo}\r\n            key={index}\r\n            index={index} />\r\n    )\r\n\r\n    if (!loadedItems) \r\n        return (<div>loading ToDo(s)...</div>) \r\n    else if (!todoItems?.length)\r\n        return (<div>No ToDo(s) yet. Add them!</div>)\r\n    else \r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {todoItemList}\r\n            </ul>\r\n        )\r\n}\r\n","import React, { useContext}  from 'react'\r\n\r\nimport Header from '../header/Header'\r\nimport TodoSummary from './components/todo-summary/TodoSummary'\r\nimport TodoAdd from './components/todo-add/TodoAdd'\r\nimport TodoList from './components/todo-list/TodoList'\r\nimport { TodosContext } from './context/TodosContext'\r\n\r\nexport default function Todos({logoImage}) {\r\n    // state    \r\n    const {loadedItems} = useContext(TodosContext)    \r\n\r\n    // component\r\n    return (        \r\n        <div className=\"todos\">\r\n            <Header title=\"Todo list\" logoImage={logoImage} isLoading={!loadedItems}/>                             \r\n            <TodoSummary />\r\n            <TodoAdd />\r\n            <TodoList />\r\n        </div>\r\n    )    \r\n}\r\n","import React from 'react'\r\nimport './Footer.scss'\r\n\r\nfunction Footer({sourceCodeUrl}) {\r\n    \r\n    return (\r\n        <footer>\r\n            <a className=\"repo-link\" href={sourceCodeUrl}>view source code <img src={process.env.PUBLIC_URL + '/github-logo.png'} alt=\"github logo\" /></a> \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport logo from './logo.svg'\r\n\r\nimport Todos from './components/todos/Todos';\r\nimport TodosContextProvider from './components/todos/context/TodosContext';\r\nimport Footer from './components/footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodosContextProvider>\r\n        <Todos logoImage={logo}/>\r\n      </TodosContextProvider>\r\n      <Footer sourceCodeUrl=\"https://github.com/si7o/react-todo-list\"/>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}