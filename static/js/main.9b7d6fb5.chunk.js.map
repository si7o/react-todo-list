{"version":3,"sources":["logo.svg","components/header/Header.jsx","components/todos/context/TodosReducer.js","components/todos/context/TodosActionTypes.js","components/todos/context/TodosContext.js","components/todos/components/todo-summary/TodoSummary.jsx","components/todos/components/todo-add/TodoAdd.jsx","components/todos/components/todo-item/TodoItem.jsx","components/todos/components/todo-list/TodoList.jsx","components/todos/components/todos-status-boundary/TodosStatusBoundary.jsx","components/todos/components/todos-settings/TodosSettings.jsx","components/todos/Todos.jsx","components/footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","logoImage","isLoading","loading","className","src","alt","todosReducer","state","action","type","console","log","todoList","todos","status","todoText","id","Math","random","toString","name","complete","filter","todo","map","error","useExternalApi","TodosContext","createContext","TodosContextProvider","useLocalData","children","useReducer","todosStore","todosDispatch","useEffect","dataUrl","process","setTimeout","fetch","then","r","json","catch","fetchTodoData","Provider","value","TodoSummary","useContext","pendigTodos","length","doneTodos","TodoAdd","useState","setTodoText","onSubmit","e","preventDefault","placeholder","onChange","event","target","disabled","TodoItem","item","onMouseUp","onClick","TodoList","todoItemList","key","TodosStatusBoundary","TodosSettings","showSettings","setShowSettings","settingsModal","checked","htmlFor","Todos","Footer","sourceCodeUrl","href","App","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,mTCG5B,SAASC,EAAT,GAAqD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,UAA4B,IAAjBC,iBAAiB,SACzDC,EAAUD,EACZ,0BAAME,UAAU,WAAhB,gBACG,GAEP,OACI,gCACI,yBAAKC,IAAKJ,EAAWG,UAAW,UAAWF,EAAY,UAAU,IAAKI,IAAI,SAC1E,yBAAKF,UAAU,SACVJ,EADL,IACaG,I,+BCVZI,EAAe,SAACC,EAAOC,GAChC,OAAOA,EAAOC,MACV,ICJyB,oBDOrB,OAFAC,QAAQC,IAAR,kCAEO,2BACAJ,GADP,IAEIK,SAAS,GAAD,mBAAML,EAAMK,UAAZ,YAAwBJ,EAAOK,QACvCC,OAAQ,IAGhB,ICZgB,WDeZ,OAFAJ,QAAQC,IAAR,6BAAkCH,EAAOO,SAAzC,MAEO,2BACAR,GADP,IAEIK,SAAS,GAAD,mBACDL,EAAMK,UADL,CAEJ,CACII,GAAIC,KAAKC,SAASC,SAAS,IAC3BC,KAAMZ,EAAOO,SACbM,UAAU,OAK1B,IC1BmB,cD6Bf,OAFAX,QAAQC,IAAR,gCAAqCH,EAAOQ,GAA5C,MAEO,2BACAT,GADP,IAEIK,SAAUL,EAAMK,SAASU,QAAO,SAACC,GAAD,OAAUA,EAAKP,KAAKR,EAAOQ,QAGnE,ICjC0B,qBDoCtB,OAFAN,QAAQC,IAAR,gCAAqCH,EAAOO,SAA5C,MAEO,2BACAR,GADP,IAEIK,SAAUL,EAAMK,SAASY,KAAI,SAACD,GAC1B,OAAIA,EAAKP,KAAOR,EAAOQ,GACZ,2BAAIO,GAAX,IAAiBF,UAAWE,EAAKF,WAE9BE,OAInB,IC5CmB,cD+Cf,OAFAb,QAAQC,IAAR,qCAEO,2BACAJ,GADP,IAEIkB,MAAO,KACPb,SAAU,GACVE,OAAQ,IAGhB,ICrDiB,cDyDb,OAHAJ,QAAQC,IAAR,mCACAD,QAAQC,IAAIH,EAAOiB,OAEZ,2BACAlB,GADP,IAEIO,QAAS,EACTW,MAAOjB,EAAOiB,QAGtB,IC7DwB,mBDgEpB,OAFAf,QAAQC,IAAR,wCAA6CJ,EAAMmB,iBAE5C,2BACAnB,GADP,IAEImB,gBAAiBnB,EAAMmB,eACvBd,SAAU,GACVE,OAAQ,IAGhB,ICtE0B,qBDyEtB,OAFAJ,QAAQC,IAAR,uCAA4CH,EAAOkB,iBAE5C,2BACAnB,GADP,IAEImB,eAAgBlB,EAAOkB,eACvBd,SAAU,GACVE,OAAQ,IAGhB,QACI,OAAOP,IEnFNoB,EAAeC,0BAkDbC,MAhDf,YAAgE,EAAjCC,aAAkC,IAAZC,EAAW,EAAXA,SAAW,EASxBC,qBAAW1B,EAP1B,CACjBM,SAAU,GACVE,OAAQ,EACRW,MAAO,KACPC,gBAAgB,IANwC,mBASrDO,EATqD,KASzCC,EATyC,KAuC5D,OAPAC,qBAAU,WACN,IAAMC,EAAUH,EAAWP,eArCP,oCADHW,mCAyCjBC,YAAY,kBAxBM,SAACF,GACO,IAAtBH,EAAWnB,QACXyB,MAAMH,GACDI,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MACG,SAAC3B,GACGH,QAAQC,IAAI,kBAERE,GACAqB,EAAc,CAACzB,KD9BV,oBC8BmCI,aAGhD,SAACY,GAAD,OAAWS,EAAc,CAACzB,KD3BrB,cC2BsCgB,aAE9CkB,OAAM,SAAClB,GAAD,OAAWS,EAAc,CAACzB,KD7BxB,cC6ByCgB,aAUxCmB,CAAcR,KAAU,OAC3C,CAACH,EAAWnB,SAGX,kBAACa,EAAakB,SAAd,CAAuBC,MAAO,CAC1Bb,aACAC,kBACCH,IChDE,SAASgB,IAAe,IAAD,IAC3Bd,EAAce,qBAAWrB,GAAzBM,WAEDgB,EAAW,UAAGhB,EAAWrB,gBAAd,aAAG,EAAqBU,QAAO,SAACC,GAAD,OAA4B,IAAlBA,EAAKF,YAAoB6B,OAC7EC,EAAS,UAAGlB,EAAWrB,gBAAd,aAAG,EAAqBU,QAAO,SAACC,GAAD,OAA4B,IAAlBA,EAAKF,YAAmB6B,OAEhF,OACI,yBAAK/C,UAAU,gBACX,yBAAKA,UAAU,WAAf,oBACqB,8BAAO8C,IAE5B,yBAAK9C,UAAU,aAAf,iBACkB,8BAAOgD,K,MCXtB,SAASC,IAAW,IAAD,EACEC,mBAAS,IADX,mBACvBtC,EADuB,KACbuC,EADa,KAEvBpB,EAAiBc,qBAAWrB,GAA5BO,cAYP,OACI,0BAAM/B,UAAU,WAAWoD,SAPZ,SAACC,GAChBA,EAAEC,iBACFvB,EAAc,CAACzB,KHdC,WGceM,aAC/BuC,EAAY,MAKR,2BACI7C,KAAK,OACLiD,YAAY,sBACZZ,MAAO/B,EACP4C,SAhBiB,SAACC,GAC1BN,EAAYM,EAAMC,OAAOf,UAgBrB,2BAAOrC,KAAK,SAASqD,SAA4B,IAAlB/C,EAASmC,OAAYJ,MAAM,c,MCrBvD,SAASiB,EAAT,GAA2B,IAARC,EAAO,EAAPA,KAEvB9B,EAAiBc,qBAAWrB,GAA5BO,cAEP,OACI,wBAAI/B,UAAW,cAAgB6D,EAAK3C,SAAW,YAAY,KACvD,4BAAQlB,UAAU,WAAWE,IAAI,eAAeN,MAAM,eAAekE,UAAW,kBAAM/B,EAAc,CAACzB,KJR/E,qBIQwGO,GAAIgD,EAAKhD,OAAvI,UAGA,0BAAMb,UAAU,QACX6D,EAAK5C,MAEV,4BAAQjB,UAAU,SAASE,IAAI,SAASN,MAAM,SAASmE,QAAS,kBAAMhC,EAAc,CAACzB,KJftE,cIewFO,GAAIgD,EAAKhD,OAAhH,W,MCVG,SAASmD,IAAY,IAAD,IAEKnB,qBAAWrB,GAAxCM,EAFwB,EAExBA,WAAYC,EAFY,EAEZA,cAEbkC,GAAyB,OAAVnC,QAAU,IAAVA,GAAA,UAAAA,EAAYrB,gBAAZ,eAAsBsC,QACvC,gCAAMjB,EAAWrB,SAASY,KAAI,SAACD,GAAD,OAC1B,kBAAC,EAAD,CACIyC,KAAMzC,EACN8C,IAAK9C,EAAKP,SAIlB,wDAGJ,OACI,yBAAKb,UAAU,aACViE,EACD,4BAAQF,QAAS,kBAAMhC,EAAc,CAACzB,KLpBvB,kBKoBf,UCrBG,SAAS6D,EAAT,GAA0C,IAAZvC,EAAW,EAAXA,SAAW,EAEhBiB,qBAAWrB,GAAxCM,EAF6C,EAE7CA,WAAYC,EAFiC,EAEjCA,cAEnB,OAAQD,EAAWnB,QACf,KAAK,EACD,OACI,yBAAKX,UAAU,sBACX,4BACI,wBAAIA,UAAU,aAAY,0BAAMA,UAAU,QAAhB,MAC1B,wBAAIA,UAAU,aAAY,0BAAMA,UAAU,QAAhB,MAC1B,wBAAIA,UAAU,aAAY,0BAAMA,UAAU,QAAhB,QAK1C,KAAK,EACD,OACI,6BACK4B,GAIb,KAAM,EACF,OACI,yBAAK5B,UAAU,SACX,uBAAGA,UAAU,WAAb,gDAGA,4BAAQ+D,QAAS,kBAAMhC,EAAc,CAACzB,KN5B/B,kBM4BP,cAIZ,QACI,OACI,yBAAKN,UAAU,SACX,uBAAGA,UAAU,WAAb,uD,MClCL,SAASoE,IAAiB,IAAD,EACIlB,oBAAS,GADb,mBAC7BmB,EAD6B,KACfC,EADe,OAEAzB,qBAAWrB,GAAxCM,EAF6B,EAE7BA,WAAYC,EAFiB,EAEjBA,cAObwC,EAAgBF,GAClB,yBAAKrE,UAAU,kBACX,wCACA,2BAAOM,KAAK,WAAWO,GAAG,iBAAiB8B,MAAM,WAAW6B,QAAS1C,EAAWP,eAAiBiC,SAR1E,WAC3Bc,GAAgB,GAChBvC,EAAc,CAACzB,KPJS,wBOWpB,2BAAOmE,QAAQ,kBAAf,mCAMR,OACI,yBAAKzE,UAAU,YACX,4BAAQ+D,QAJa,kBAAMO,GAAiBD,IAILnE,IAAI,WAAWN,MAAM,YAA5D,UACC2E,GClBE,SAASG,EAAT,GAA6B,IAAb7E,EAAY,EAAZA,UAEpBiC,EAAce,qBAAWrB,GAAzBM,WAGP,OACI,yBAAK9B,UAAU,SACX,kBAAC,EAAD,CAAQJ,MAAM,YAAYC,UAAWA,EAAWC,UAAiC,IAAtBgC,EAAWnB,SACtE,kBAACwD,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,EAAD,O,MCXGQ,MATf,YAAkC,IAAjBC,EAAgB,EAAhBA,cAEb,OACI,gCACI,uBAAG5E,UAAU,YAAY6E,KAAMD,GAA/B,oBAA+D,yBAAK3E,IAAKiC,mCAA6ChC,IAAI,mBCcvH4E,MAZf,WACE,OACE,yBAAK9E,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC0E,EAAD,CAAO7E,UAAWkF,OAEpB,kBAAC,EAAD,CAAQH,cAAc,8CCHRI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdtD,OAAM,SAAAlB,GACLf,QAAQe,MAAMA,EAAMyE,c","file":"static/js/main.9b7d6fb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport './Header.scss'\r\n\r\nexport default function Header({title, logoImage, isLoading=true}) {\r\n    const loading = isLoading ? (\r\n        <span className=\"loading\">(loading...)</span>\r\n        ): '';\r\n\r\n    return (\r\n        <header>\r\n            <img src={logoImage} className={' logo '+ (isLoading ? 'loading':'')} alt=\"logo\" />                     \r\n            <div className=\"title\">\r\n                {title} {loading}\r\n            </div>   \r\n        </header>\r\n    )\r\n}\r\n","import { ADD_FETCHED_TODOS, ADD_TODO, REMOVE_TODO, TOGGLE_TODO_STATUS, RESET_TODOS ,SET_ERROR, TODOS_TOGGLE_API, TODOS_SET_API_TYPE } from \"./TodosActionTypes\"\r\n\r\nexport const todosReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case ADD_FETCHED_TODOS:\r\n            console.log(`reducer: add fetched todo list`)\r\n\r\n            return {\r\n                ...state,\r\n                todoList: [...state.todoList,...action.todos],\r\n                status: 1, // success\r\n            }\r\n\r\n        case ADD_TODO:\r\n            console.log(`reducer: add todo \"${action.todoText}\"`)\r\n\r\n            return {\r\n                ...state,\r\n                todoList: [\r\n                    ...state.todoList,\r\n                    { \r\n                        id: Math.random().toString(36),\r\n                        name: action.todoText,\r\n                        complete: false\r\n                    }\r\n                ],\r\n            }\r\n\r\n        case REMOVE_TODO:\r\n            console.log(`reducer: remove todo \"${action.id}\"`)\r\n\r\n            return {\r\n                ...state,\r\n                todoList: state.todoList.filter((todo) => todo.id!==action.id),\r\n            }\r\n\r\n        case TOGGLE_TODO_STATUS:            \r\n            console.log(`reducer: toggle todo \"${action.todoText}\"`)            \r\n\r\n            return {\r\n                ...state,\r\n                todoList: state.todoList.map((todo)=> {\r\n                    if (todo.id === action.id) {\r\n                        return {...todo, complete: !todo.complete}\r\n                    }\r\n                    return todo\r\n                }),\r\n            }\r\n\r\n        case RESET_TODOS:\r\n            console.log(`reducer: change status to Loading`)\r\n\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                todoList: [],\r\n                status: 0, //loading\r\n            }        \r\n\r\n        case SET_ERROR:\r\n            console.log(`reducer: change status to Error`)            \r\n            console.log(action.error)\r\n            \r\n            return {\r\n                ...state,\r\n                status: -1, //error\r\n                error: action.error,\r\n            }\r\n\r\n        case TODOS_TOGGLE_API:\r\n            console.log(`reducer: toggle external API ${!state.useExternalApi}`)\r\n\r\n            return {\r\n                ...state,\r\n                useExternalApi: !state.useExternalApi,                \r\n                todoList: [],\r\n                status: 0, //loading\r\n            }\r\n        \r\n        case TODOS_SET_API_TYPE:\r\n            console.log(`reducer: toggle external API ${action.useExternalApi}`)\r\n\r\n            return {\r\n                ...state,\r\n                useExternalApi: action.useExternalApi,                \r\n                todoList: [],\r\n                status: 0, //loading\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","export const ADD_FETCHED_TODOS = 'ADD_FETCHED_TODOS'\r\nexport const ADD_TODO = 'ADD_TODO'\r\nexport const REMOVE_TODO = 'REMOVE_TODO'\r\nexport const TOGGLE_TODO_STATUS = 'TOGGLE_TODO_STATUS'\r\n\r\nexport const RESET_TODOS = 'RESET_TODOS'\r\nexport const SET_ERROR = 'TODOS_ERROR'\r\n\r\nexport const TODOS_TOGGLE_API = 'TODOS_TOGGLE_API'\r\nexport const TODOS_SET_API_TYPE = 'TODOS_SET_API_TYPE'","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport { todosReducer } from './TodosReducer'\r\nimport { ADD_FETCHED_TODOS, SET_ERROR } from './TodosActionTypes'\r\n\r\nconst localTodoDataUrl = process.env.PUBLIC_URL + '/data/todos.json'\r\nconst externalTodoDataUrl = 'https://todo-api-zeta.vercel.app/'\r\n\r\nexport const TodosContext = createContext()\r\n\r\nfunction TodosContextProvider({useLocalData = false, children}) {\r\n    // state\r\n    const initialState = {\r\n        todoList: [],\r\n        status: 0, // 0: loading, 1: success, -1: error,\r\n        error: null,\r\n        useExternalApi: true,\r\n    }\r\n    \r\n    const [todosStore, todosDispatch] = useReducer(todosReducer, initialState)\r\n\r\n    // data load\r\n    const fetchTodoData = (dataUrl) => {        \r\n        if (todosStore.status === 0) {\r\n            fetch(dataUrl)            \r\n                .then((r) => r.json())\r\n                .then(\r\n                    (todos) => {\r\n                        console.log('todo(s) loaded') \r\n\r\n                        if (todos) {\r\n                            todosDispatch({type: ADD_FETCHED_TODOS, todos})\r\n                        }\r\n                    }, \r\n                    (error) => todosDispatch({type: SET_ERROR, error})\r\n                )\r\n                .catch((error) => todosDispatch({type: SET_ERROR, error})\r\n                )\r\n        }\r\n    }\r\n\r\n    // fetch todos from file\r\n    useEffect(() => {\r\n        const dataUrl = todosStore.useExternalApi ? externalTodoDataUrl: localTodoDataUrl\r\n \r\n        // delay the request so we can see the spinner :D\r\n        setTimeout( () => fetchTodoData(dataUrl), 500)\r\n    }, [todosStore.status]) /* eslint-disable-line react-hooks/exhaustive-deps  */ // <---- OK???\r\n    \r\n    return (\r\n        <TodosContext.Provider value={{\r\n            todosStore,\r\n            todosDispatch}}>\r\n            {children}\r\n        </TodosContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TodosContextProvider\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport './TodoSummary.scss'\r\nimport { TodosContext } from '../../context/TodosContext';\r\n\r\nexport default function TodoSummary() {\r\n    const {todosStore} = useContext(TodosContext)\r\n\r\n    const pendigTodos = todosStore.todoList?.filter((todo) => todo.complete === false).length;\r\n    const doneTodos = todosStore.todoList?.filter((todo) => todo.complete === true).length;\r\n\r\n    return (\r\n        <div className=\"todo-summary\">\r\n            <div className=\"pending\">\r\n                Pending ToDo(s): <span>{pendigTodos}</span>\r\n            </div>\r\n            <div className=\"completed\">\r\n                Done ToDo(s): <span>{doneTodos}</span>\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {TodosContext} from '../../context/TodosContext'\r\nimport './TodoAdd.scss'\r\nimport { ADD_TODO } from '../../context/TodosActionTypes'\r\n\r\nexport default function TodoAdd() {\r\n    const [todoText, setTodoText] = useState('')\r\n    const {todosDispatch} = useContext(TodosContext)\r\n\r\n    const handleTodoTextChange = (event) => {\r\n        setTodoText(event.target.value)\r\n    }    \r\n\r\n    const submitTodo = (e) => {\r\n        e.preventDefault()\r\n        todosDispatch({type: ADD_TODO, todoText})\r\n        setTodoText('')\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-add\" onSubmit={submitTodo}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"type todo text here\" \r\n                value={todoText} \r\n                onChange={handleTodoTextChange} />\r\n            <input type=\"submit\" disabled={todoText.length===0} value=\"Add todo\"/>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport './TodoItem.scss'\r\nimport { TodosContext } from '../../context/TodosContext'\r\nimport { TOGGLE_TODO_STATUS, REMOVE_TODO } from '../../context/TodosActionTypes'\r\n\r\nexport default function TodoItem({item}) {\r\n\r\n    const {todosDispatch} = useContext(TodosContext)\r\n\r\n    return (\r\n        <li className={'todo-item ' + (item.complete ? 'completed':'')}>\r\n            <button className=\"complete\" alt=\"Mark as done\" title=\"Mark as done\" onMouseUp={() => todosDispatch({type:TOGGLE_TODO_STATUS, id: item.id})}>\r\n                &#x2714;\r\n            </button>\r\n            <span className=\"text\">\r\n                {item.name}\r\n            </span>\r\n            <button className=\"remove\" alt=\"Remove\" title=\"Remove\" onClick={() => todosDispatch({type:REMOVE_TODO, id: item.id})}>\r\n                &#x2716;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport TodoItem from '../todo-item/TodoItem'\r\n\r\nimport './TodoList.scss'\r\nimport { TodosContext } from '../../context/TodosContext'\r\nimport { RESET_TODOS } from '../../context/TodosActionTypes'\r\n\r\nexport default function TodoList() {\r\n\r\n    const {todosStore, todosDispatch} = useContext(TodosContext)\r\n\r\n    const todoItemList = todosStore?.todoList?.length ?(\r\n        <ul> {todosStore.todoList.map((todo) => \r\n            <TodoItem \r\n                item={todo}\r\n                key={todo.id} />\r\n            )}\r\n        </ul>\r\n    ) : ( \r\n        <p>No ToDo(s) yet. Add them!</p>\r\n    )\r\n    \r\n    return (\r\n        <div className=\"todo-list\">\r\n            {todoItemList}\r\n            <button onClick={() => todosDispatch({type: RESET_TODOS})}>Reset</button>\r\n        </div>            \r\n    ) \r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TodosContext } from '../../context/TodosContext'\r\nimport { RESET_TODOS } from '../../context/TodosActionTypes'\r\n\r\nexport default function TodosStatusBoundary({children}) {  \r\n    // should status management be distributed along each of the {children} components instead of centralicing it here?\r\n    const {todosStore, todosDispatch} = useContext(TodosContext)\r\n\r\n    switch (todosStore.status) {\r\n        case 0: //loading\r\n            return (\r\n                <div className=\"todo-list skeleton\">\r\n                    <ul>\r\n                        <li className=\"todo-item\"><span className=\"text\"> </span></li>\r\n                        <li className=\"todo-item\"><span className=\"text\"> </span></li>\r\n                        <li className=\"todo-item\"><span className=\"text\"> </span></li>\r\n                    </ul>\r\n                </div>\r\n            ) \r\n\r\n        case 1: //success\r\n            return (\r\n                <div>\r\n                    {children}\r\n                </div>\r\n            )\r\n\r\n        case -1: //error\r\n            return (\r\n                <div className=\"error\">\r\n                    <p className=\"warning\">\r\n                        An error ocurred when trying to load ToDo(s)\r\n                    </p>\r\n                    <button onClick={() => todosDispatch({type: RESET_TODOS})}>Try again</button>\r\n                </div>\r\n            )\r\n\r\n        default:\r\n            return (\r\n                <div className=\"error\">\r\n                    <p className=\"warning\">\r\n                        An unknown error ocurred. Please refresh the page\r\n                    </p>\r\n                </div>\r\n            )        \r\n    }  \r\n        \r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { TodosContext } from '../../context/TodosContext'\r\nimport { TODOS_TOGGLE_API } from '../../context/TodosActionTypes'\r\n\r\nimport './TodosSettings.scss'\r\n\r\nexport default function TodosSettings() {\r\n    const [showSettings, setShowSettings] = useState(false)\r\n    const {todosStore, todosDispatch} = useContext(TodosContext)\r\n\r\n    const handleExternalApiCheck = () => {\r\n        setShowSettings(false)\r\n        todosDispatch({type: TODOS_TOGGLE_API})\r\n    }\r\n\r\n    const settingsModal = showSettings && (\r\n        <div className=\"settings-modal\">\r\n            <h3>Settings</h3>\r\n            <input type=\"checkbox\" id=\"useExternalApi\" value=\"external\" checked={todosStore.useExternalApi}  onChange={handleExternalApiCheck}/>\r\n            <label htmlFor=\"useExternalApi\">Load ToDo(s) from external API</label>\r\n        </div>\r\n    )\r\n\r\n    const toggleSettingsWindow = () => setShowSettings(!showSettings)\r\n\r\n    return (\r\n        <div className=\"settings\">\r\n            <button onClick={toggleSettingsWindow} alt=\"settings\" title=\"settings\">&#x2699;</button>\r\n            {settingsModal}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext}  from 'react'\r\n\r\nimport Header from '../header/Header'\r\nimport TodoSummary from './components/todo-summary/TodoSummary'\r\nimport TodoAdd from './components/todo-add/TodoAdd'\r\nimport TodoList from './components/todo-list/TodoList'\r\nimport { TodosContext } from './context/TodosContext'\r\nimport TodosStatusBoundary from './components/todos-status-boundary/TodosStatusBoundary'\r\nimport TodosSettings from './components/todos-settings/TodosSettings'\r\n\r\nexport default function Todos({logoImage}) {\r\n    // state    \r\n    const {todosStore} = useContext(TodosContext)\r\n\r\n    // component\r\n    return (        \r\n        <div className=\"todos\">\r\n            <Header title=\"Todo list\" logoImage={logoImage} isLoading={todosStore.status === 0}/>            \r\n            <TodosStatusBoundary>\r\n                <TodoSummary />            \r\n                <TodoAdd />\r\n                <TodoList />\r\n            </TodosStatusBoundary>\r\n            <TodosSettings />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Footer.scss'\r\n\r\nfunction Footer({sourceCodeUrl}) {\r\n    \r\n    return (\r\n        <footer>\r\n            <a className=\"repo-link\" href={sourceCodeUrl}>view source code <img src={process.env.PUBLIC_URL + '/github-logo.png'} alt=\"github logo\" /></a> \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport logo from './logo.svg'\r\n\r\nimport Todos from './components/todos/Todos';\r\nimport TodosContextProvider from './components/todos/context/TodosContext';\r\nimport Footer from './components/footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodosContextProvider>\r\n        <Todos logoImage={logo}/>\r\n      </TodosContextProvider>\r\n      <Footer sourceCodeUrl=\"https://github.com/si7o/react-todo-list\"/>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}