{"version":3,"sources":["logo.svg","components/header/Header.jsx","contexts/TodosContext.js","components/todos/components/todo-summary/TodoSummary.jsx","components/todos/components/todo-add/TodoAdd.jsx","components/todos/components/todo-list/TodoItem.jsx","components/todos/components/todo-list/TodoList.jsx","components/todos/Todos.jsx","components/footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","logoImage","isLoading","loading","className","src","alt","TodosContext","createContext","TodosContextProvider","children","useState","todoItems","setTodoItems","loadedItems","setLoadedItems","useEffect","setTimeout","dataUrl","process","fetch","then","r","json","data","console","log","newTodoItems","slice","concat","catch","e","alert","finally","Provider","value","addTodo","todoText","text","done","toggleTodo","todoIndex","removeTodo","filter","todo","TodoSummary","useContext","pendigTodos","length","doneTodos","TodoAdd","setTodoText","onSubmit","preventDefault","type","placeholder","onChange","event","target","disabled","TodoItem","item","index","onClick","TodoList","todoItemList","map","key","Todos","Footer","sourceCodeUrl","href","App","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.449c4092.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport './Header.scss'\r\n\r\nexport default function Header({title, logoImage, isLoading=true}) {\r\n    const loading = isLoading ? (\r\n        <span className=\"loading\">(loading...)</span>\r\n        ): '';\r\n\r\n    return (\r\n        <header>\r\n            <img src={logoImage} className={' logo '+ (isLoading ? 'loading':'')} alt=\"logo\" />                     \r\n            <div className=\"title\">\r\n                {title} {loading}\r\n            </div>   \r\n        </header>\r\n    )\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react'\r\n\r\nconst todoDataUrl = process.env.PUBLIC_URL + '/data/todos.json'\r\n\r\nexport const TodosContext = createContext()\r\n\r\nfunction TodosContextProvider({children}) {\r\n    // state\r\n    const [todoItems, setTodoItems] = useState([])\r\n    const [loadedItems, setLoadedItems] = useState(false)\r\n\r\n    // data load\r\n    // eslint-disable-next-line\r\n    const fetchTodoData = (dataUrl) => {        \r\n        if (!loadedItems) {\r\n            fetch(dataUrl)            \r\n                .then((r) => r.json())\r\n                .then((data) => {\r\n                    console.log('todo(s) loaded') \r\n\r\n                    if (data) {\r\n                        const newTodoItems = todoItems.slice().concat(data)\r\n                        setTodoItems(newTodoItems)\r\n                    }\r\n                })\r\n                .catch((e)=> alert('ToDo(s) could not be loaded. Create yours...'))\r\n                .finally(()=> setLoadedItems(true))\r\n        }\r\n    }\r\n\r\n    // fetch todos from file\r\n    useEffect(() => {\r\n        // delay the request so we can see the spinner :D\r\n        setTimeout( () => fetchTodoData(todoDataUrl), 1200)\r\n    }, [loadedItems]) /* eslint-disable-line react-hooks/exhaustive-deps  */ // <---- OK???\r\n\r\n    // event handlers\r\n\r\n    const addTodo = (todoText) => {\r\n        console.log(`add todo \"${todoText}\"`);\r\n\r\n        setTodoItems([...todoItems,{ text: todoText, done: false}])        \r\n    }\r\n       \r\n    const toggleTodo = (todoIndex) => {\r\n        console.log(`toggle todo \"${todoIndex}\"`);\r\n        \r\n        const newTodoItems = todoItems.slice()\r\n        newTodoItems[todoIndex].done= !todoItems[todoIndex].done\r\n    \r\n        setTodoItems(newTodoItems)\r\n    }\r\n    \r\n    const removeTodo = (todoText) => {\r\n        console.log(`remove todo \"${todoText}\"`);\r\n\r\n        setTodoItems(todoItems.filter((todo) => todo.text!==todoText))\r\n    }\r\n\r\n    return (\r\n        <TodosContext.Provider value={{\r\n            todoItems,\r\n            loadedItems,\r\n            addTodo,\r\n            toggleTodo,\r\n            removeTodo}}>\r\n            {children}\r\n        </TodosContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TodosContextProvider\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport './TodoSummary.scss'\r\nimport { TodosContext } from '../../../../contexts/TodosContext';\r\n\r\nexport default function TodoSummary() {\r\n    const {todoItems} = useContext(TodosContext)\r\n\r\n    const pendigTodos = todoItems?.filter((todo) => todo.done === false).length;\r\n    const doneTodos = todoItems?.filter((todo) => todo.done === true).length;\r\n\r\n    return (\r\n        <div className=\"todo-summary\">\r\n            <div className=\"pending\">\r\n                Pending ToDo(s): <span>{pendigTodos}</span>\r\n            </div>\r\n            <div className=\"completed\">\r\n                Done ToDo(s): <span>{doneTodos}</span>\r\n            </div>\r\n        </div>        \r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {TodosContext} from '../../../../contexts/TodosContext'\r\nimport './TodoAdd.scss'\r\n\r\nexport default function TodoAdd() {\r\n    const [todoText, setTodoText] = useState('')\r\n    const {addTodo} = useContext(TodosContext)\r\n\r\n    const handleTodoTextChange = (event) => {\r\n        setTodoText(event.target.value)\r\n    }    \r\n\r\n    const submitTodo = (e) => {\r\n        e.preventDefault()\r\n        addTodo(todoText)\r\n        setTodoText('')\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-add\" onSubmit={submitTodo}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"type todo text here\" \r\n                value={todoText} \r\n                onChange={handleTodoTextChange} />\r\n            <input type=\"submit\" disabled={todoText.length===0} value=\"Add todo\"/>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport './TodoItem.scss'\r\nimport { TodosContext } from '../../../../contexts/TodosContext'\r\n\r\nexport default function TodoItem({item, index}) {\r\n\r\n    const {toggleTodo, removeTodo} = useContext(TodosContext)\r\n\r\n    return (\r\n        <li className={'todo-item ' + (item.done ? 'completed':'')}>\r\n            <button className=\"complete\" alt=\"Mark as done\" title=\"Mark as done\" onClick={() => toggleTodo(index)}>\r\n                &#x2713;\r\n            </button>\r\n            <span className=\"text\">\r\n                {item.text}\r\n            </span>\r\n            <button className=\"remove\" alt=\"Remove\" title=\"Remove\" onClick={() => removeTodo(item.text)}>\r\n                &#x1f5d1;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nimport './TodoList.scss'\r\nimport { TodosContext } from '../../../../contexts/TodosContext'\r\n\r\nexport default function TodoList() {\r\n\r\n    const {todoItems, loadedItems} = useContext(TodosContext)\r\n\r\n    const todoItemList = todoItems?.map((todo, index) => \r\n        <TodoItem \r\n            item={todo}\r\n            key={index}\r\n            index={index} />\r\n    )\r\n\r\n    if (!loadedItems) \r\n        return (<div>loading ToDo(s)...</div>) \r\n    else if (!todoItems?.length)\r\n        return (<div>No ToDo(s) yet. Add them!</div>)\r\n    else \r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {todoItemList}\r\n            </ul>\r\n        )\r\n}\r\n","import React, { useContext}  from 'react'\r\n\r\nimport Header from '../header/Header'\r\nimport TodoSummary from './components/todo-summary/TodoSummary'\r\nimport TodoAdd from './components/todo-add/TodoAdd'\r\nimport TodoList from './components/todo-list/TodoList'\r\nimport { TodosContext } from '../../contexts/TodosContext'\r\n\r\nexport default function Todos({logoImage}) {\r\n    // state    \r\n    const {loadedItems} = useContext(TodosContext)    \r\n\r\n    // component\r\n    return (        \r\n        <div className=\"todos\">\r\n            <Header title=\"Todo list\" logoImage={logoImage} isLoading={!loadedItems}/>                             \r\n            <TodoSummary />\r\n            <TodoAdd />\r\n            <TodoList />\r\n        </div>\r\n    )    \r\n}\r\n","import React from 'react'\r\nimport './Footer.scss'\r\n\r\nfunction Footer({sourceCodeUrl}) {\r\n    \r\n    return (\r\n        <footer>\r\n            <a className=\"repo-link\" href={sourceCodeUrl}>view source code <img src={process.env.PUBLIC_URL + '/github-logo.png'} /></a> \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport logo from './logo.svg'\r\n\r\nimport Todos from './components/todos/Todos';\r\nimport TodosContextProvider from './contexts/TodosContext';\r\nimport Footer from './components/footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodosContextProvider>\r\n        <Todos logoImage={logo}/>\r\n      </TodosContextProvider>\r\n      <Footer sourceCodeUrl=\"https://github.com/si7o/react-todo-list\"/>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}